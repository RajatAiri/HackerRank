#include <bits/stdc++.h>

using namespace std;

// Complete the palindromeIndex function below.
bool isPalindrome(string s) {
    string s1 = s;
    reverse(s1.begin(), s1.end());
    
    if(s1 == s) return true;
    return false;
}

string modify(string s, int n) {
    string s1;
    int len = s.length();
    for(int i=0;i < len;i++) {
        if(i != n)
            s1.push_back(s[i]);
    }
    
    return s1;
}

// Complete the palindromeIndex function below.
int palindromeIndex(string s) {
    if(isPalindrome(s)) return -1;
    int len = s.length();
    for(int i =0; i < (len/2); i++) {
        if(s[i] != s[len-1-i]) {
            // either remove i or remove i-1 
            // if not both return -1
            if(isPalindrome(modify(s,i))) return i;
            if(isPalindrome(modify(s,len-1-i))) return len-1-i;
            return -1;
        }
    }
    return -1;
}

int main()
{
    int n;
    cin>>n;
    while(n--){
        string s;
        cin>>s;
        int result = palindromeIndex(s);
        cout<<result<<endl;
    }

    return 0;
}
